

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov  6 18:15:34 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171                           
   172                           	psect	nvBANK0
   173  0020                     __pnvBANK0:	
   174  0020                     _iter:	
   175  0020                     	ds	2
   176  0022                     _time:	
   177  0022                     	ds	2
   178  0006                     _PORTB	set	6
   179  001D                     _CCP2CON	set	29
   180  0012                     _T2CON	set	18
   181  0006                     _PORTBbits	set	6
   182  0007                     _PORTC	set	7
   183  0034                     _RB4	set	52
   184  0086                     _TRISB	set	134
   185  0081                     _OPTION_REG	set	129
   186  0087                     _TRISC	set	135
   187                           
   188                           ; #config settings
   189  0001                     
   190                           	psect	cinit
   191  07F8                     start_initialization:	
   192  07F8                     __initialization:	
   193                           
   194                           ; Clear objects allocated to BANK0
   195  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   196  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   197  07FA  01A4               	clrf	__pbssBANK0& (0+127)
   198  07FB  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   199  07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  07FC                     __end_of__initialization:	
   203  07FC  0183               	clrf	3
   204  07FD  120A  118A  2F10   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207  0024                     __pbssBANK0:	
   208  0024                     _flag:	
   209  0024                     	ds	2
   210                           
   211                           	psect	cstackCOMMON
   212  0070                     __pcstackCOMMON:	
   213  0070                     ?_btn_check:	
   214  0070                     ??_btn_check:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_data_up:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ??_data_up:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_data_down:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_data_down:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_num9:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_num9:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_num1:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??_num1:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_end:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??_end:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	6
   256  0076                     main@i_90:	
   257                           
   258                           ; 2 bytes @ 0x6
   259  0076                     	ds	2
   260  0078                     main@j:	
   261                           
   262                           ; 2 bytes @ 0x8
   263  0078                     	ds	2
   264  007A                     main@i_93:	
   265                           
   266                           ; 2 bytes @ 0xA
   267  007A                     	ds	2
   268  007C                     main@i:	
   269                           
   270                           ; 2 bytes @ 0xC
   271  007C                     	ds	2
   272                           
   273                           	psect	maintext
   274  0710                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 120 in file "mainZS.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  j               2    8[COMMON] int 
   285 ;;  i               2   10[COMMON] int 
   286 ;;  i               2    6[COMMON] int 
   287 ;;  i               2   12[COMMON] int 
   288 ;;  value_for_du    2    0        unsigned int 
   289 ;;  value_for_pr    1    0        unsigned char 
   290 ;;  value_for_PR    1    0        unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:        12       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:        14       0       0       0       0
   304 ;;Total ram usage:       14 bytes
   305 ;; Hardware stack levels required when called:    2
   306 ;; This function calls:
   307 ;;		_btn_check
   308 ;;		_data_down
   309 ;;		_data_up
   310 ;;		_end
   311 ;;		_num1
   312 ;;		_num9
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           
   319                           ;psect for function _main
   320  0710                     _main:	
   321  0710                     l780:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   324                           
   325                           
   326                           ;mainZS.c: 122:     unsigned int value_for_duty_main;;mainZS.c: 124: TRISC &= 0b11111001
      +                          ;
   327  0710  30F9               	movlw	249
   328  0711  00F0               	movwf	??_main
   329  0712  0870               	movf	??_main,w
   330  0713  1683               	bsf	3,5	;RP0=1, select bank1
   331  0714  1303               	bcf	3,6	;RP1=0, select bank1
   332  0715  0587               	andwf	7,f	;volatile
   333                           
   334                           ;mainZS.c: 125: OPTION_REG &= 0b01111111;
   335  0716  307F               	movlw	127
   336  0717  00F0               	movwf	??_main
   337  0718  0870               	movf	??_main,w
   338  0719  0581               	andwf	1,f	;volatile
   339  071A                     l782:	
   340                           
   341                           ;mainZS.c: 126: T2CON = 0b00000100;
   342  071A  3004               	movlw	4
   343  071B  1283               	bcf	3,5	;RP0=0, select bank0
   344  071C  1303               	bcf	3,6	;RP1=0, select bank0
   345  071D  0092               	movwf	18	;volatile
   346  071E                     l784:	
   347                           
   348                           ;mainZS.c: 127: CCP2CON = 0b00001111;
   349  071E  300F               	movlw	15
   350  071F  009D               	movwf	29	;volatile
   351                           
   352                           ;mainZS.c: 128: PORTB &= 0b11111001;
   353  0720  30F9               	movlw	249
   354  0721  00F0               	movwf	??_main
   355  0722  0870               	movf	??_main,w
   356  0723  0586               	andwf	6,f	;volatile
   357                           
   358                           ;mainZS.c: 129: TRISB &= 0b11111001;
   359  0724  30F9               	movlw	249
   360  0725  00F0               	movwf	??_main
   361  0726  0870               	movf	??_main,w
   362  0727  1683               	bsf	3,5	;RP0=1, select bank1
   363  0728  1303               	bcf	3,6	;RP1=0, select bank1
   364  0729  0586               	andwf	6,f	;volatile
   365  072A                     l786:	
   366                           
   367                           ;mainZS.c: 131: time=900;
   368  072A  3084               	movlw	132
   369  072B  1283               	bcf	3,5	;RP0=0, select bank0
   370  072C  1303               	bcf	3,6	;RP1=0, select bank0
   371  072D  00A2               	movwf	_time
   372  072E  3003               	movlw	3
   373  072F  00A3               	movwf	_time+1
   374  0730                     l788:	
   375                           
   376                           ;mainZS.c: 132: iter=1;
   377  0730  3001               	movlw	1
   378  0731  00A0               	movwf	_iter
   379  0732  3000               	movlw	0
   380  0733  00A1               	movwf	_iter+1
   381  0734                     l790:	
   382  0734                     l792:	
   383  0734                     l794:	
   384  0734                     l796:	
   385                           
   386                           ;mainZS.c: 145: data_up();
   387  0734  120A  118A  2681  120A  118A  	fcall	_data_up
   388  0739                     l798:	
   389                           
   390                           ;mainZS.c: 147: for(int i =0; i<40;++i){
   391  0739  01FC               	clrf	main@i
   392  073A  01FD               	clrf	main@i+1
   393  073B                     l804:	
   394                           
   395                           ;mainZS.c: 148:     data_down();
   396  073B  120A  118A  2677  120A  118A  	fcall	_data_down
   397  0740                     l806:	
   398                           
   399                           ;mainZS.c: 149: }
   400  0740  3001               	movlw	1
   401  0741  07FC               	addwf	main@i,f
   402  0742  1803               	skipnc
   403  0743  0AFD               	incf	main@i+1,f
   404  0744  3000               	movlw	0
   405  0745  07FD               	addwf	main@i+1,f
   406  0746                     l808:	
   407  0746  087D               	movf	main@i+1,w
   408  0747  3A80               	xorlw	128
   409  0748  00FF               	movwf	btemp+1
   410  0749  3080               	movlw	128
   411  074A  027F               	subwf	btemp+1,w
   412  074B  1D03               	skipz
   413  074C  2F4F               	goto	u165
   414  074D  3028               	movlw	40
   415  074E  027C               	subwf	main@i,w
   416  074F                     u165:	
   417  074F  1C03               	skipc
   418  0750  2F52               	goto	u161
   419  0751  2F53               	goto	u160
   420  0752                     u161:	
   421  0752  2F3B               	goto	l804
   422  0753                     u160:	
   423  0753                     l810:	
   424                           
   425                           ;mainZS.c: 153:     data_up();
   426  0753  120A  118A  2681  120A  118A  	fcall	_data_up
   427                           
   428                           ;mainZS.c: 154:     num9();
   429  0758  120A  118A  26E7  120A  118A  	fcall	_num9
   430                           
   431                           ;mainZS.c: 155:     num9();
   432  075D  120A  118A  26E7  120A  118A  	fcall	_num9
   433                           
   434                           ;mainZS.c: 156:     num9();
   435  0762  120A  118A  26E7  120A  118A  	fcall	_num9
   436                           
   437                           ;mainZS.c: 157:     num9();
   438  0767  120A  118A  26E7  120A  118A  	fcall	_num9
   439                           
   440                           ;mainZS.c: 158:     end();
   441  076C  120A  118A  268B  120A  118A  	fcall	_end
   442  0771                     l812:	
   443                           
   444                           ;mainZS.c: 159:     btn_check();
   445  0771  120A  118A  269B  120A  118A  	fcall	_btn_check
   446  0776                     l814:	
   447                           
   448                           ;mainZS.c: 160:     for(int i =0; i<time;++i){
   449  0776  01F6               	clrf	main@i_90
   450  0777  01F7               	clrf	main@i_90+1
   451  0778  2FA5               	goto	l65
   452  0779                     l816:	
   453                           
   454                           ;mainZS.c: 161:         for(int j=0; j<iter; ++j){
   455  0779  01F8               	clrf	main@j
   456  077A  01F9               	clrf	main@j+1
   457  077B  2F8F               	goto	l824
   458  077C                     l818:	
   459                           
   460                           ;mainZS.c: 162:             _delay((unsigned long)((1)*(18432000/4000.0)));
   461  077C  3006               	movlw	6
   462  077D  00F1               	movwf	??_main+1
   463  077E  30FB               	movlw	251
   464  077F  00F0               	movwf	??_main
   465  0780                     u207:	
   466  0780  0BF0               	decfsz	??_main,f
   467  0781  2F80               	goto	u207
   468  0782  0BF1               	decfsz	??_main+1,f
   469  0783  2F80               	goto	u207
   470  0784                     l820:	
   471                           
   472                           ;mainZS.c: 163:             btn_check();
   473  0784  120A  118A  269B  120A  118A  	fcall	_btn_check
   474  0789                     l822:	
   475                           
   476                           ;mainZS.c: 164:         }
   477  0789  3001               	movlw	1
   478  078A  07F8               	addwf	main@j,f
   479  078B  1803               	skipnc
   480  078C  0AF9               	incf	main@j+1,f
   481  078D  3000               	movlw	0
   482  078E  07F9               	addwf	main@j+1,f
   483  078F                     l824:	
   484  078F  0879               	movf	main@j+1,w
   485  0790  3A80               	xorlw	128
   486  0791  00F0               	movwf	??_main
   487  0792  1283               	bcf	3,5	;RP0=0, select bank0
   488  0793  1303               	bcf	3,6	;RP1=0, select bank0
   489  0794  0821               	movf	_iter+1,w
   490  0795  3A80               	xorlw	128
   491  0796  0270               	subwf	??_main,w
   492  0797  1D03               	skipz
   493  0798  2F9B               	goto	u175
   494  0799  0820               	movf	_iter,w
   495  079A  0278               	subwf	main@j,w
   496  079B                     u175:	
   497  079B  1C03               	skipc
   498  079C  2F9E               	goto	u171
   499  079D  2F9F               	goto	u170
   500  079E                     u171:	
   501  079E  2F7C               	goto	l818
   502  079F                     u170:	
   503  079F                     l826:	
   504                           
   505                           ;mainZS.c: 165:     }
   506  079F  3001               	movlw	1
   507  07A0  07F6               	addwf	main@i_90,f
   508  07A1  1803               	skipnc
   509  07A2  0AF7               	incf	main@i_90+1,f
   510  07A3  3000               	movlw	0
   511  07A4  07F7               	addwf	main@i_90+1,f
   512  07A5                     l65:	
   513  07A5  0877               	movf	main@i_90+1,w
   514  07A6  3A80               	xorlw	128
   515  07A7  00F0               	movwf	??_main
   516  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   517  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   518  07AA  0823               	movf	_time+1,w
   519  07AB  3A80               	xorlw	128
   520  07AC  0270               	subwf	??_main,w
   521  07AD  1D03               	skipz
   522  07AE  2FB1               	goto	u185
   523  07AF  0822               	movf	_time,w
   524  07B0  0276               	subwf	main@i_90,w
   525  07B1                     u185:	
   526  07B1  1C03               	skipc
   527  07B2  2FB4               	goto	u181
   528  07B3  2FB5               	goto	u180
   529  07B4                     u181:	
   530  07B4  2F79               	goto	l816
   531  07B5                     u180:	
   532  07B5                     l828:	
   533                           
   534                           ;mainZS.c: 167:     data_up();
   535  07B5  120A  118A  2681  120A  118A  	fcall	_data_up
   536                           
   537                           ;mainZS.c: 168:     num1();
   538  07BA  120A  118A  26BE  120A  118A  	fcall	_num1
   539                           
   540                           ;mainZS.c: 169:     num1();
   541  07BF  120A  118A  26BE  120A  118A  	fcall	_num1
   542                           
   543                           ;mainZS.c: 170:     num1();
   544  07C4  120A  118A  26BE  120A  118A  	fcall	_num1
   545                           
   546                           ;mainZS.c: 171:     num1();
   547  07C9  120A  118A  26BE  120A  118A  	fcall	_num1
   548                           
   549                           ;mainZS.c: 172:     end();
   550  07CE  120A  118A  268B  120A  118A  	fcall	_end
   551  07D3                     l830:	
   552                           
   553                           ;mainZS.c: 173:     for(int i =0; i<time;++i){
   554  07D3  01FA               	clrf	main@i_93
   555  07D4  01FB               	clrf	main@i_93+1
   556  07D5  2FE4               	goto	l71
   557  07D6                     l832:	
   558                           
   559                           ;mainZS.c: 174:         _delay((unsigned long)((1)*(18432000/4000.0)));
   560  07D6  3006               	movlw	6
   561  07D7  00F1               	movwf	??_main+1
   562  07D8  30FB               	movlw	251
   563  07D9  00F0               	movwf	??_main
   564  07DA                     u217:	
   565  07DA  0BF0               	decfsz	??_main,f
   566  07DB  2FDA               	goto	u217
   567  07DC  0BF1               	decfsz	??_main+1,f
   568  07DD  2FDA               	goto	u217
   569                           
   570                           ;mainZS.c: 175:     }
   571  07DE  3001               	movlw	1
   572  07DF  07FA               	addwf	main@i_93,f
   573  07E0  1803               	skipnc
   574  07E1  0AFB               	incf	main@i_93+1,f
   575  07E2  3000               	movlw	0
   576  07E3  07FB               	addwf	main@i_93+1,f
   577  07E4                     l71:	
   578  07E4  087B               	movf	main@i_93+1,w
   579  07E5  3A80               	xorlw	128
   580  07E6  00F0               	movwf	??_main
   581  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   582  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   583  07E9  0823               	movf	_time+1,w
   584  07EA  3A80               	xorlw	128
   585  07EB  0270               	subwf	??_main,w
   586  07EC  1D03               	skipz
   587  07ED  2FF0               	goto	u195
   588  07EE  0822               	movf	_time,w
   589  07EF  027A               	subwf	main@i_93,w
   590  07F0                     u195:	
   591  07F0  1C03               	skipc
   592  07F1  2FF3               	goto	u191
   593  07F2  2FF4               	goto	u190
   594  07F3                     u191:	
   595  07F3  2FD6               	goto	l832
   596  07F4                     u190:	
   597  07F4  2F53               	goto	l810
   598  07F5  120A  118A  2800   	ljmp	start
   599  07F8                     __end_of_main:	
   600                           
   601                           	psect	text1
   602  06E7                     __ptext1:	
   603 ;; *************** function _num9 *****************
   604 ;; Defined at:
   605 ;;		line 89 in file "mainZS.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; Hardware stack levels required when called:    1
   626 ;; This function calls:
   627 ;;		_data_down
   628 ;;		_data_up
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _num9
   636  06E7                     _num9:	
   637  06E7                     l774:	
   638                           ;incstack = 0
   639                           ; Regs used in _num9: [status,2+status,0+pclath+cstack]
   640                           
   641                           
   642                           ;mainZS.c: 90:     data_up();
   643  06E7  120A  118A  2681  120A  118A  	fcall	_data_up
   644                           
   645                           ;mainZS.c: 91:     data_up();
   646  06EC  120A  118A  2681  120A  118A  	fcall	_data_up
   647                           
   648                           ;mainZS.c: 92:     data_up();
   649  06F1  120A  118A  2681  120A  118A  	fcall	_data_up
   650                           
   651                           ;mainZS.c: 93:     data_up();
   652  06F6  120A  118A  2681  120A  118A  	fcall	_data_up
   653                           
   654                           ;mainZS.c: 94:     data_down();
   655  06FB  120A  118A  2677  120A  118A  	fcall	_data_down
   656                           
   657                           ;mainZS.c: 95:     data_up();
   658  0700  120A  118A  2681  120A  118A  	fcall	_data_up
   659                           
   660                           ;mainZS.c: 96:     data_up();
   661  0705  120A  118A  2681  120A  118A  	fcall	_data_up
   662                           
   663                           ;mainZS.c: 97:     data_down();
   664  070A  120A  118A  2677  120A  118A  	fcall	_data_down
   665  070F                     l51:	
   666  070F  0008               	return
   667  0710                     __end_of_num9:	
   668                           
   669                           	psect	text2
   670  06BE                     __ptext2:	
   671 ;; *************** function _num1 *****************
   672 ;; Defined at:
   673 ;;		line 100 in file "mainZS.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       0       0       0       0
   691 ;;Total ram usage:        0 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    1
   694 ;; This function calls:
   695 ;;		_data_down
   696 ;;		_data_up
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _num1
   704  06BE                     _num1:	
   705  06BE                     l776:	
   706                           ;incstack = 0
   707                           ; Regs used in _num1: [status,2+status,0+pclath+cstack]
   708                           
   709                           
   710                           ;mainZS.c: 101:     data_down();
   711  06BE  120A  118A  2677  120A  118A  	fcall	_data_down
   712                           
   713                           ;mainZS.c: 102:     data_up();
   714  06C3  120A  118A  2681  120A  118A  	fcall	_data_up
   715                           
   716                           ;mainZS.c: 103:     data_up();
   717  06C8  120A  118A  2681  120A  118A  	fcall	_data_up
   718                           
   719                           ;mainZS.c: 104:     data_down();
   720  06CD  120A  118A  2677  120A  118A  	fcall	_data_down
   721                           
   722                           ;mainZS.c: 105:     data_down();
   723  06D2  120A  118A  2677  120A  118A  	fcall	_data_down
   724                           
   725                           ;mainZS.c: 106:     data_down();
   726  06D7  120A  118A  2677  120A  118A  	fcall	_data_down
   727                           
   728                           ;mainZS.c: 107:     data_down();
   729  06DC  120A  118A  2677  120A  118A  	fcall	_data_down
   730                           
   731                           ;mainZS.c: 108:     data_down();
   732  06E1  120A  118A  2677  120A  118A  	fcall	_data_down
   733  06E6                     l54:	
   734  06E6  0008               	return
   735  06E7                     __end_of_num1:	
   736                           
   737                           	psect	text3
   738  0681                     __ptext3:	
   739 ;; *************** function _data_up *****************
   740 ;; Defined at:
   741 ;;		line 74 in file "mainZS.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		None
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_num9
   765 ;;		_num1
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _data_up
   772  0681                     _data_up:	
   773  0681                     l758:	
   774                           ;incstack = 0
   775                           ; Regs used in _data_up: []
   776                           
   777                           
   778                           ;mainZS.c: 75:     PORTBbits.RB1=1;
   779  0681  1283               	bcf	3,5	;RP0=0, select bank0
   780  0682  1303               	bcf	3,6	;RP1=0, select bank0
   781  0683  1486               	bsf	6,1	;volatile
   782                           
   783                           ;mainZS.c: 76:     PORTBbits.RB2=1;
   784  0684  1506               	bsf	6,2	;volatile
   785  0685  0000               	nop	;# 
   786                           
   787                           ;mainZS.c: 78:     PORTBbits.RB2=0;
   788  0686  1283               	bcf	3,5	;RP0=0, select bank0
   789  0687  1303               	bcf	3,6	;RP1=0, select bank0
   790  0688  1106               	bcf	6,2	;volatile
   791                           
   792                           ;mainZS.c: 79:     PORTBbits.RB1=0;
   793  0689  1086               	bcf	6,1	;volatile
   794  068A                     l45:	
   795  068A  0008               	return
   796  068B                     __end_of_data_up:	
   797                           
   798                           	psect	text4
   799  068B                     __ptext4:	
   800 ;; *************** function _end *****************
   801 ;; Defined at:
   802 ;;		line 113 in file "mainZS.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      void 
   809 ;; Registers used:
   810 ;;		status,2, status,0, pclath, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   816 ;;      Params:         0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    1
   823 ;; This function calls:
   824 ;;		_data_down
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           
   831                           ;psect for function _end
   832  068B                     _end:	
   833  068B                     l778:	
   834                           ;incstack = 0
   835                           ; Regs used in _end: [status,2+status,0+pclath+cstack]
   836                           
   837                           
   838                           ;mainZS.c: 114:     data_down();
   839  068B  120A  118A  2677  120A  118A  	fcall	_data_down
   840                           
   841                           ;mainZS.c: 115:     data_down();
   842  0690  120A  118A  2677  120A  118A  	fcall	_data_down
   843                           
   844                           ;mainZS.c: 116:     data_down();
   845  0695  120A  118A  2677  120A  118A  	fcall	_data_down
   846  069A                     l57:	
   847  069A  0008               	return
   848  069B                     __end_of_end:	
   849                           
   850                           	psect	text5
   851  0677                     __ptext5:	
   852 ;; *************** function _data_down *****************
   853 ;; Defined at:
   854 ;;		line 82 in file "mainZS.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		None
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   868 ;;      Params:         0       0       0       0       0
   869 ;;      Locals:         0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0
   871 ;;      Totals:         0       0       0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_num9
   878 ;;		_num1
   879 ;;		_end
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           
   885                           ;psect for function _data_down
   886  0677                     _data_down:	
   887  0677                     l760:	
   888                           ;incstack = 0
   889                           ; Regs used in _data_down: []
   890                           
   891  0677  0000               	nop	;# 
   892                           
   893                           ;mainZS.c: 84:     PORTBbits.RB2=1;
   894  0678  1283               	bcf	3,5	;RP0=0, select bank0
   895  0679  1303               	bcf	3,6	;RP1=0, select bank0
   896  067A  1506               	bsf	6,2	;volatile
   897  067B  0000               	nop	;# 
   898                           
   899                           ;mainZS.c: 86:     PORTBbits.RB2=0;
   900  067C  1283               	bcf	3,5	;RP0=0, select bank0
   901  067D  1303               	bcf	3,6	;RP1=0, select bank0
   902  067E  1106               	bcf	6,2	;volatile
   903  067F  0000               	nop	;# 
   904  0680                     l48:	
   905  0680  0008               	return
   906  0681                     __end_of_data_down:	
   907                           
   908                           	psect	text6
   909  069B                     __ptext6:	
   910 ;; *************** function _btn_check *****************
   911 ;; Defined at:
   912 ;;		line 64 in file "mainZS.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      void 
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; This function calls:
   933 ;;		Nothing
   934 ;; This function is called by:
   935 ;;		_main
   936 ;; This function uses a non-reentrant model
   937 ;;
   938                           
   939                           
   940                           ;psect for function _btn_check
   941  069B                     _btn_check:	
   942  069B                     l762:	
   943                           ;incstack = 0
   944                           ; Regs used in _btn_check: [wreg+status,2+status,0]
   945                           
   946                           
   947                           ;mainZS.c: 65:     if (!PORTBbits.RB4 && !flag){
   948  069B  1283               	bcf	3,5	;RP0=0, select bank0
   949  069C  1303               	bcf	3,6	;RP1=0, select bank0
   950  069D  1A06               	btfsc	6,4	;volatile
   951  069E  2EA0               	goto	u121
   952  069F  2EA1               	goto	u120
   953  06A0                     u121:	
   954  06A0  2EAC               	goto	l39
   955  06A1                     u120:	
   956  06A1                     l764:	
   957  06A1  0824               	movf	_flag,w
   958  06A2  0425               	iorwf	_flag+1,w
   959  06A3  1D03               	btfss	3,2
   960  06A4  2EA6               	goto	u131
   961  06A5  2EA7               	goto	u130
   962  06A6                     u131:	
   963  06A6  2EAC               	goto	l39
   964  06A7                     u130:	
   965  06A7                     l766:	
   966                           
   967                           ;mainZS.c: 66:         flag=1;
   968  06A7  3001               	movlw	1
   969  06A8  00A4               	movwf	_flag
   970  06A9  3000               	movlw	0
   971  06AA  00A5               	movwf	_flag+1
   972                           
   973                           ;mainZS.c: 67:     }
   974  06AB  2EBD               	goto	l42
   975  06AC                     l39:	
   976                           ;mainZS.c: 68:     else if (PORTBbits.RB4 && flag){
   977                           
   978  06AC  1E06               	btfss	6,4	;volatile
   979  06AD  2EAF               	goto	u141
   980  06AE  2EB0               	goto	u140
   981  06AF                     u141:	
   982  06AF  2EBD               	goto	l42
   983  06B0                     u140:	
   984  06B0                     l768:	
   985  06B0  0824               	movf	_flag,w
   986  06B1  0425               	iorwf	_flag+1,w
   987  06B2  1903               	btfsc	3,2
   988  06B3  2EB5               	goto	u151
   989  06B4  2EB6               	goto	u150
   990  06B5                     u151:	
   991  06B5  2EBD               	goto	l42
   992  06B6                     u150:	
   993  06B6                     l770:	
   994                           
   995                           ;mainZS.c: 69:         flag =0;
   996  06B6  01A4               	clrf	_flag
   997  06B7  01A5               	clrf	_flag+1
   998  06B8                     l772:	
   999                           
  1000                           ;mainZS.c: 70:         iter =iter*2;
  1001  06B8  1003               	clrc
  1002  06B9  0D20               	rlf	_iter,w
  1003  06BA  00A0               	movwf	_iter
  1004  06BB  0D21               	rlf	_iter+1,w
  1005  06BC  00A1               	movwf	_iter+1
  1006  06BD                     l42:	
  1007  06BD  0008               	return
  1008  06BE                     __end_of_btn_check:	
  1009  007E                     btemp	set	126	;btemp
  1010  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0     121
                                              0 COMMON    14    14      0
                          _btn_check
                          _data_down
                            _data_up
                                _end
                               _num1
                               _num9
 ---------------------------------------------------------------------------------
 (1) _num9                                                 0     0      0       0
                          _data_down
                            _data_up
 ---------------------------------------------------------------------------------
 (1) _num1                                                 0     0      0       0
                          _data_down
                            _data_up
 ---------------------------------------------------------------------------------
 (2) _data_up                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _end                                                  0     0      0       0
                          _data_down
 ---------------------------------------------------------------------------------
 (2) _data_down                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _btn_check                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _btn_check
   _data_down
   _data_up
   _end
     _data_down
   _num1
     _data_down
     _data_up
   _num9
     _data_down
     _data_up

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      14       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      14      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov  6 18:15:34 2019

                     l42 06BD                       l51 070F                       l45 068A  
                     l54 06E6                       l39 06AC                       l71 07E4  
                     l48 0680                       l57 069A                       l65 07A5  
            __CFG_DEBUG$ 0001              __CFG_BOREN$ 0001                      l810 0753  
                    l820 0784                      l812 0771                      l804 073B  
                    l830 07D3                      l822 0789                      l814 0776  
                    l806 0740                      l760 0677                      l832 07D6  
                    l824 078F                      l816 0779                      l808 0746  
                    l770 06B6                      l762 069B                      l826 079F  
                    l818 077C                      l772 06B8                      l764 06A1  
                    l828 07B5                      l780 0710                      l766 06A7  
                    l758 0681                      l774 06E7                      l790 0734  
                    l782 071A                      l768 06B0                      l776 06BE  
                    l792 0734                      l784 071E                      l778 068B  
                    l794 0734                      l786 072A                      l796 0734  
                    l788 0730                      l798 0739                      _RB4 0034  
                    u120 06A1                      u121 06A0                      u130 06A7  
                    u131 06A6                      u140 06B0                      u141 06AF  
                    u150 06B6                      u151 06B5                      u207 0780  
                    u160 0753                      u217 07DA                      u161 0752  
                    u170 079F                      u171 079E                      u180 07B5  
                    u181 07B4                      u165 074F                      u190 07F4  
                    u191 07F3                      u175 079B                      u185 07B1  
                    u195 07F0                      _end 068B             __CFG_FOSC$HS 0000  
                   ?_end 0070             __CFG_WRT$OFF 0000                     _flag 0024  
                   _main 0710                     _num1 06BE                     _iter 0020  
                   _num9 06E7                     _time 0022                     btemp 007E  
                   start 0000                    ??_end 0070                    ?_main 0070  
                  ?_num1 0070                    ?_num9 0070            __CFG_WDTE$OFF 0000  
                  _T2CON 0012                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087          __end_of_data_up 068B  
                  main@i 007C                    main@j 0078                    status 0003  
                  wtemp0 007E          __initialization 07F8             __end_of_main 07F8  
           __end_of_num1 06E7             __end_of_num9 0710                   ??_main 0070  
                 ??_num1 0070                   ??_num9 0070           __CFG_PWRTE$OFF 0000  
              ??_data_up 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
     __size_of_data_down 000A       __size_of_btn_check 0023               __pbssBANK0 0024  
             __pmaintext 0710                  _CCP2CON 001D        __end_of_data_down 0681  
      __end_of_btn_check 06BE                  _data_up 0681                  __ptext1 06E7  
                __ptext2 06BE                  __ptext3 0681                  __ptext4 068B  
                __ptext5 0677                  __ptext6 069B             __size_of_end 0010  
   end_of_initialization 07FC                _PORTBbits 0006                __CFG_CPD$ 0001  
              __CFG_LVP$ 0000      start_initialization 07F8              __end_of_end 069B  
              ___latbits 0002                __pnvBANK0 0020                _data_down 0677  
               ?_data_up 0070                _btn_check 069B               ?_data_down 0070  
             ?_btn_check 0070                 __CFG_CP$ 0001         __size_of_data_up 000A  
          __size_of_main 00E8            __size_of_num1 0029            __size_of_num9 0029  
            ??_data_down 0070                 main@i_90 0076                 main@i_93 007A  
            ??_btn_check 0070               _OPTION_REG 0081  
