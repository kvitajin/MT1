

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov  6 17:42:12 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171                           
   172                           	psect	nvBANK0
   173  0020                     __pnvBANK0:	
   174  0020                     _iter:	
   175  0020                     	ds	2
   176  0022                     _time:	
   177  0022                     	ds	2
   178  0006                     _PORTB	set	6
   179  001D                     _CCP2CON	set	29
   180  0012                     _T2CON	set	18
   181  0006                     _PORTBbits	set	6
   182  0007                     _PORTC	set	7
   183  0034                     _RB4	set	52
   184  0086                     _TRISB	set	134
   185  0081                     _OPTION_REG	set	129
   186  0087                     _TRISC	set	135
   187                           
   188                           ; #config settings
   189  0001                     
   190                           	psect	cinit
   191  07F8                     start_initialization:	
   192  07F8                     __initialization:	
   193                           
   194                           ; Clear objects allocated to BANK0
   195  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   196  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   197  07FA  01A4               	clrf	__pbssBANK0& (0+127)
   198  07FB  01A5               	clrf	(__pbssBANK0+1)& (0+127)
   199  07FC                     end_of_initialization:	
   200                           ;End of C runtime variable initialization code
   201                           
   202  07FC                     __end_of__initialization:	
   203  07FC  0183               	clrf	3
   204  07FD  120A  118A  2F1E   	ljmp	_main	;jump to C main() function
   205                           
   206                           	psect	bssBANK0
   207  0024                     __pbssBANK0:	
   208  0024                     _flag:	
   209  0024                     	ds	2
   210                           
   211                           	psect	cstackCOMMON
   212  0070                     __pcstackCOMMON:	
   213  0070                     ?_btn_check:	
   214  0070                     ??_btn_check:	
   215                           ; 1 bytes @ 0x0
   216                           
   217  0070                     ?_data_up:	
   218                           ; 1 bytes @ 0x0
   219                           
   220  0070                     ??_data_up:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_data_down:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ??_data_down:	
   227                           ; 1 bytes @ 0x0
   228                           
   229  0070                     ?_num9:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ??_num9:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ?_num1:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ??_num1:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_end:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ??_end:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     ??_main:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	3
   256  0073                     main@j:	
   257                           
   258                           ; 2 bytes @ 0x3
   259  0073                     	ds	4
   260  0077                     main@i_85:	
   261                           
   262                           ; 2 bytes @ 0x7
   263  0077                     	ds	2
   264  0079                     main@i:	
   265                           
   266                           ; 2 bytes @ 0x9
   267  0079                     	ds	2
   268  007B                     main@i_86:	
   269                           
   270                           ; 2 bytes @ 0xB
   271  007B                     	ds	2
   272                           
   273                           	psect	maintext
   274  071E                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 118 in file "mainZS.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;  j               2    3[COMMON] int 
   285 ;;  i               2   11[COMMON] int 
   286 ;;  i               2    7[COMMON] int 
   287 ;;  i               2    9[COMMON] int 
   288 ;;  value_for_du    2    0        unsigned int 
   289 ;;  value_for_pr    1    0        unsigned char 
   290 ;;  value_for_PR    1    0        unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:        12       0       0       0       0
   302 ;;      Temps:          1       0       0       0       0
   303 ;;      Totals:        13       0       0       0       0
   304 ;;Total ram usage:       13 bytes
   305 ;; Hardware stack levels required when called:    2
   306 ;; This function calls:
   307 ;;		_btn_check
   308 ;;		_data_down
   309 ;;		_data_up
   310 ;;		_end
   311 ;;		_num1
   312 ;;		_num9
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           
   319                           ;psect for function _main
   320  071E                     _main:	
   321  071E                     l774:	
   322                           ;incstack = 0
   323                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   324                           
   325                           
   326                           ;mainZS.c: 120:     unsigned int value_for_duty_main;;mainZS.c: 122: TRISC &= 0b11111001
      +                          ;
   327  071E  30F9               	movlw	249
   328  071F  00F0               	movwf	??_main
   329  0720  0870               	movf	??_main,w
   330  0721  1683               	bsf	3,5	;RP0=1, select bank1
   331  0722  1303               	bcf	3,6	;RP1=0, select bank1
   332  0723  0587               	andwf	7,f	;volatile
   333                           
   334                           ;mainZS.c: 123: OPTION_REG &= 0b01111111;
   335  0724  307F               	movlw	127
   336  0725  00F0               	movwf	??_main
   337  0726  0870               	movf	??_main,w
   338  0727  0581               	andwf	1,f	;volatile
   339  0728                     l776:	
   340                           
   341                           ;mainZS.c: 124: T2CON = 0b00000100;
   342  0728  3004               	movlw	4
   343  0729  1283               	bcf	3,5	;RP0=0, select bank0
   344  072A  1303               	bcf	3,6	;RP1=0, select bank0
   345  072B  0092               	movwf	18	;volatile
   346  072C                     l778:	
   347                           
   348                           ;mainZS.c: 125: CCP2CON = 0b00001111;
   349  072C  300F               	movlw	15
   350  072D  009D               	movwf	29	;volatile
   351                           
   352                           ;mainZS.c: 126: PORTB &= 0b11111001;
   353  072E  30F9               	movlw	249
   354  072F  00F0               	movwf	??_main
   355  0730  0870               	movf	??_main,w
   356  0731  0586               	andwf	6,f	;volatile
   357                           
   358                           ;mainZS.c: 127: TRISB &= 0b11111001;
   359  0732  30F9               	movlw	249
   360  0733  00F0               	movwf	??_main
   361  0734  0870               	movf	??_main,w
   362  0735  1683               	bsf	3,5	;RP0=1, select bank1
   363  0736  1303               	bcf	3,6	;RP1=0, select bank1
   364  0737  0586               	andwf	6,f	;volatile
   365  0738                     l780:	
   366                           
   367                           ;mainZS.c: 129: time=80000;
   368  0738  3080               	movlw	128
   369  0739  1283               	bcf	3,5	;RP0=0, select bank0
   370  073A  1303               	bcf	3,6	;RP1=0, select bank0
   371  073B  00A2               	movwf	_time
   372  073C  3038               	movlw	56
   373  073D  00A3               	movwf	_time+1
   374  073E                     l782:	
   375                           
   376                           ;mainZS.c: 130: iter=1;
   377  073E  3001               	movlw	1
   378  073F  00A0               	movwf	_iter
   379  0740  3000               	movlw	0
   380  0741  00A1               	movwf	_iter+1
   381  0742                     l784:	
   382  0742                     l786:	
   383  0742                     l788:	
   384  0742                     l790:	
   385                           
   386                           ;mainZS.c: 143: data_up();
   387  0742  120A  118A  268F  120A  118A  	fcall	_data_up
   388  0747                     l792:	
   389                           
   390                           ;mainZS.c: 145: for(int i =0; i<40;++i){
   391  0747  01F9               	clrf	main@i
   392  0748  01FA               	clrf	main@i+1
   393  0749                     l798:	
   394                           
   395                           ;mainZS.c: 146:     data_down();
   396  0749  120A  118A  2685  120A  118A  	fcall	_data_down
   397  074E                     l800:	
   398                           
   399                           ;mainZS.c: 147: }
   400  074E  3001               	movlw	1
   401  074F  07F9               	addwf	main@i,f
   402  0750  1803               	skipnc
   403  0751  0AFA               	incf	main@i+1,f
   404  0752  3000               	movlw	0
   405  0753  07FA               	addwf	main@i+1,f
   406  0754                     l802:	
   407  0754  087A               	movf	main@i+1,w
   408  0755  3A80               	xorlw	128
   409  0756  00FF               	movwf	btemp+1
   410  0757  3080               	movlw	128
   411  0758  027F               	subwf	btemp+1,w
   412  0759  1D03               	skipz
   413  075A  2F5D               	goto	u165
   414  075B  3028               	movlw	40
   415  075C  0279               	subwf	main@i,w
   416  075D                     u165:	
   417  075D  1C03               	skipc
   418  075E  2F60               	goto	u161
   419  075F  2F61               	goto	u160
   420  0760                     u161:	
   421  0760  2F49               	goto	l798
   422  0761                     u160:	
   423  0761                     l804:	
   424                           
   425                           ;mainZS.c: 151:     data_up();
   426  0761  120A  118A  268F  120A  118A  	fcall	_data_up
   427                           
   428                           ;mainZS.c: 152:     num9();
   429  0766  120A  118A  26F5  120A  118A  	fcall	_num9
   430                           
   431                           ;mainZS.c: 153:     num9();
   432  076B  120A  118A  26F5  120A  118A  	fcall	_num9
   433                           
   434                           ;mainZS.c: 154:     num1();
   435  0770  120A  118A  26CC  120A  118A  	fcall	_num1
   436                           
   437                           ;mainZS.c: 155:     num9();
   438  0775  120A  118A  26F5  120A  118A  	fcall	_num9
   439                           
   440                           ;mainZS.c: 156:     end();
   441  077A  120A  118A  2699  120A  118A  	fcall	_end
   442  077F                     l806:	
   443                           
   444                           ;mainZS.c: 157:     btn_check();
   445  077F  120A  118A  26A9  120A  118A  	fcall	_btn_check
   446  0784                     l808:	
   447                           
   448                           ;mainZS.c: 158:     for(int i =0; i<time;++i){
   449  0784  01F7               	clrf	main@i_85
   450  0785  01F8               	clrf	main@i_85+1
   451  0786  2F8E               	goto	l63
   452  0787                     l64:	
   453  0787  0000               	nop	;# 
   454  0788                     l810:	
   455                           
   456                           ;mainZS.c: 160:     }
   457  0788  3001               	movlw	1
   458  0789  07F7               	addwf	main@i_85,f
   459  078A  1803               	skipnc
   460  078B  0AF8               	incf	main@i_85+1,f
   461  078C  3000               	movlw	0
   462  078D  07F8               	addwf	main@i_85+1,f
   463  078E                     l63:	
   464  078E  0878               	movf	main@i_85+1,w
   465  078F  3A80               	xorlw	128
   466  0790  00F0               	movwf	??_main
   467  0791  1283               	bcf	3,5	;RP0=0, select bank0
   468  0792  1303               	bcf	3,6	;RP1=0, select bank0
   469  0793  0823               	movf	_time+1,w
   470  0794  3A80               	xorlw	128
   471  0795  0270               	subwf	??_main,w
   472  0796  1D03               	skipz
   473  0797  2F9A               	goto	u175
   474  0798  0822               	movf	_time,w
   475  0799  0277               	subwf	main@i_85,w
   476  079A                     u175:	
   477  079A  1C03               	skipc
   478  079B  2F9D               	goto	u171
   479  079C  2F9E               	goto	u170
   480  079D                     u171:	
   481  079D  2F87               	goto	l64
   482  079E                     u170:	
   483  079E                     l812:	
   484                           
   485                           ;mainZS.c: 161:     data_up();
   486  079E  120A  118A  268F  120A  118A  	fcall	_data_up
   487                           
   488                           ;mainZS.c: 162:     num9();
   489  07A3  120A  118A  26F5  120A  118A  	fcall	_num9
   490                           
   491                           ;mainZS.c: 163:     num1();
   492  07A8  120A  118A  26CC  120A  118A  	fcall	_num1
   493                           
   494                           ;mainZS.c: 164:     num9();
   495  07AD  120A  118A  26F5  120A  118A  	fcall	_num9
   496                           
   497                           ;mainZS.c: 165:     num1();
   498  07B2  120A  118A  26CC  120A  118A  	fcall	_num1
   499                           
   500                           ;mainZS.c: 166:     end();
   501  07B7  120A  118A  2699  120A  118A  	fcall	_end
   502  07BC                     l814:	
   503                           
   504                           ;mainZS.c: 167:     btn_check();
   505  07BC  120A  118A  26A9  120A  118A  	fcall	_btn_check
   506  07C1                     l816:	
   507                           
   508                           ;mainZS.c: 168:     for(int i =0; i<time;++i){
   509  07C1  01FB               	clrf	main@i_86
   510  07C2  01FC               	clrf	main@i_86+1
   511  07C3  2FE4               	goto	l66
   512  07C4                     l818:	
   513                           
   514                           ;mainZS.c: 169:         for(int j=0; i<iter; ++j){
   515  07C4  01F3               	clrf	main@j
   516  07C5  01F4               	clrf	main@j+1
   517  07C6  2FCE               	goto	l68
   518  07C7                     l69:	
   519  07C7  0000               	nop	;# 
   520  07C8                     l820:	
   521                           
   522                           ;mainZS.c: 171:         }
   523  07C8  3001               	movlw	1
   524  07C9  07F3               	addwf	main@j,f
   525  07CA  1803               	skipnc
   526  07CB  0AF4               	incf	main@j+1,f
   527  07CC  3000               	movlw	0
   528  07CD  07F4               	addwf	main@j+1,f
   529  07CE                     l68:	
   530  07CE  087C               	movf	main@i_86+1,w
   531  07CF  3A80               	xorlw	128
   532  07D0  00F0               	movwf	??_main
   533  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   534  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   535  07D3  0821               	movf	_iter+1,w
   536  07D4  3A80               	xorlw	128
   537  07D5  0270               	subwf	??_main,w
   538  07D6  1D03               	skipz
   539  07D7  2FDA               	goto	u185
   540  07D8  0820               	movf	_iter,w
   541  07D9  027B               	subwf	main@i_86,w
   542  07DA                     u185:	
   543  07DA  1C03               	skipc
   544  07DB  2FDD               	goto	u181
   545  07DC  2FDE               	goto	u180
   546  07DD                     u181:	
   547  07DD  2FC7               	goto	l69
   548  07DE                     u180:	
   549  07DE                     l822:	
   550                           
   551                           ;mainZS.c: 172:     }
   552  07DE  3001               	movlw	1
   553  07DF  07FB               	addwf	main@i_86,f
   554  07E0  1803               	skipnc
   555  07E1  0AFC               	incf	main@i_86+1,f
   556  07E2  3000               	movlw	0
   557  07E3  07FC               	addwf	main@i_86+1,f
   558  07E4                     l66:	
   559  07E4  087C               	movf	main@i_86+1,w
   560  07E5  3A80               	xorlw	128
   561  07E6  00F0               	movwf	??_main
   562  07E7  1283               	bcf	3,5	;RP0=0, select bank0
   563  07E8  1303               	bcf	3,6	;RP1=0, select bank0
   564  07E9  0823               	movf	_time+1,w
   565  07EA  3A80               	xorlw	128
   566  07EB  0270               	subwf	??_main,w
   567  07EC  1D03               	skipz
   568  07ED  2FF0               	goto	u195
   569  07EE  0822               	movf	_time,w
   570  07EF  027B               	subwf	main@i_86,w
   571  07F0                     u195:	
   572  07F0  1C03               	skipc
   573  07F1  2FF3               	goto	u191
   574  07F2  2FF4               	goto	u190
   575  07F3                     u191:	
   576  07F3  2FC4               	goto	l818
   577  07F4                     u190:	
   578  07F4  2F61               	goto	l804
   579  07F5  120A  118A  2800   	ljmp	start
   580  07F8                     __end_of_main:	
   581                           
   582                           	psect	text1
   583  06F5                     __ptext1:	
   584 ;; *************** function _num9 *****************
   585 ;; Defined at:
   586 ;;		line 87 in file "mainZS.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          0       0       0       0       0
   603 ;;      Totals:         0       0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		_data_down
   609 ;;		_data_up
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           
   616                           ;psect for function _num9
   617  06F5                     _num9:	
   618  06F5                     l768:	
   619                           ;incstack = 0
   620                           ; Regs used in _num9: [status,2+status,0+pclath+cstack]
   621                           
   622                           
   623                           ;mainZS.c: 88:     data_up();
   624  06F5  120A  118A  268F  120A  118A  	fcall	_data_up
   625                           
   626                           ;mainZS.c: 89:     data_up();
   627  06FA  120A  118A  268F  120A  118A  	fcall	_data_up
   628                           
   629                           ;mainZS.c: 90:     data_up();
   630  06FF  120A  118A  268F  120A  118A  	fcall	_data_up
   631                           
   632                           ;mainZS.c: 91:     data_up();
   633  0704  120A  118A  268F  120A  118A  	fcall	_data_up
   634                           
   635                           ;mainZS.c: 92:     data_down();
   636  0709  120A  118A  2685  120A  118A  	fcall	_data_down
   637                           
   638                           ;mainZS.c: 93:     data_up();
   639  070E  120A  118A  268F  120A  118A  	fcall	_data_up
   640                           
   641                           ;mainZS.c: 94:     data_up();
   642  0713  120A  118A  268F  120A  118A  	fcall	_data_up
   643                           
   644                           ;mainZS.c: 95:     data_down();
   645  0718  120A  118A  2685  120A  118A  	fcall	_data_down
   646  071D                     l49:	
   647  071D  0008               	return
   648  071E                     __end_of_num9:	
   649                           
   650                           	psect	text2
   651  06CC                     __ptext2:	
   652 ;; *************** function _num1 *****************
   653 ;; Defined at:
   654 ;;		line 98 in file "mainZS.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		status,2, status,0, pclath, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   668 ;;      Params:         0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0
   671 ;;      Totals:         0       0       0       0       0
   672 ;;Total ram usage:        0 bytes
   673 ;; Hardware stack levels used:    1
   674 ;; Hardware stack levels required when called:    1
   675 ;; This function calls:
   676 ;;		_data_down
   677 ;;		_data_up
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           
   684                           ;psect for function _num1
   685  06CC                     _num1:	
   686  06CC                     l770:	
   687                           ;incstack = 0
   688                           ; Regs used in _num1: [status,2+status,0+pclath+cstack]
   689                           
   690                           
   691                           ;mainZS.c: 99:     data_down();
   692  06CC  120A  118A  2685  120A  118A  	fcall	_data_down
   693                           
   694                           ;mainZS.c: 100:     data_up();
   695  06D1  120A  118A  268F  120A  118A  	fcall	_data_up
   696                           
   697                           ;mainZS.c: 101:     data_up();
   698  06D6  120A  118A  268F  120A  118A  	fcall	_data_up
   699                           
   700                           ;mainZS.c: 102:     data_down();
   701  06DB  120A  118A  2685  120A  118A  	fcall	_data_down
   702                           
   703                           ;mainZS.c: 103:     data_down();
   704  06E0  120A  118A  2685  120A  118A  	fcall	_data_down
   705                           
   706                           ;mainZS.c: 104:     data_down();
   707  06E5  120A  118A  2685  120A  118A  	fcall	_data_down
   708                           
   709                           ;mainZS.c: 105:     data_down();
   710  06EA  120A  118A  2685  120A  118A  	fcall	_data_down
   711                           
   712                           ;mainZS.c: 106:     data_down();
   713  06EF  120A  118A  2685  120A  118A  	fcall	_data_down
   714  06F4                     l52:	
   715  06F4  0008               	return
   716  06F5                     __end_of_num1:	
   717                           
   718                           	psect	text3
   719  068F                     __ptext3:	
   720 ;; *************** function _data_up *****************
   721 ;; Defined at:
   722 ;;		line 72 in file "mainZS.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		None
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_num9
   746 ;;		_num1
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _data_up
   753  068F                     _data_up:	
   754  068F                     l752:	
   755                           ;incstack = 0
   756                           ; Regs used in _data_up: []
   757                           
   758                           
   759                           ;mainZS.c: 73:     PORTBbits.RB1=1;
   760  068F  1283               	bcf	3,5	;RP0=0, select bank0
   761  0690  1303               	bcf	3,6	;RP1=0, select bank0
   762  0691  1486               	bsf	6,1	;volatile
   763                           
   764                           ;mainZS.c: 74:     PORTBbits.RB2=1;
   765  0692  1506               	bsf	6,2	;volatile
   766  0693  0000               	nop	;# 
   767                           
   768                           ;mainZS.c: 76:     PORTBbits.RB2=0;
   769  0694  1283               	bcf	3,5	;RP0=0, select bank0
   770  0695  1303               	bcf	3,6	;RP1=0, select bank0
   771  0696  1106               	bcf	6,2	;volatile
   772                           
   773                           ;mainZS.c: 77:     PORTBbits.RB1=0;
   774  0697  1086               	bcf	6,1	;volatile
   775  0698                     l43:	
   776  0698  0008               	return
   777  0699                     __end_of_data_up:	
   778                           
   779                           	psect	text4
   780  0699                     __ptext4:	
   781 ;; *************** function _end *****************
   782 ;; Defined at:
   783 ;;		line 111 in file "mainZS.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		status,2, status,0, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; Hardware stack levels required when called:    1
   804 ;; This function calls:
   805 ;;		_data_down
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           
   812                           ;psect for function _end
   813  0699                     _end:	
   814  0699                     l772:	
   815                           ;incstack = 0
   816                           ; Regs used in _end: [status,2+status,0+pclath+cstack]
   817                           
   818                           
   819                           ;mainZS.c: 112:     data_down();
   820  0699  120A  118A  2685  120A  118A  	fcall	_data_down
   821                           
   822                           ;mainZS.c: 113:     data_down();
   823  069E  120A  118A  2685  120A  118A  	fcall	_data_down
   824                           
   825                           ;mainZS.c: 114:     data_down();
   826  06A3  120A  118A  2685  120A  118A  	fcall	_data_down
   827  06A8                     l55:	
   828  06A8  0008               	return
   829  06A9                     __end_of_end:	
   830                           
   831                           	psect	text5
   832  0685                     __ptext5:	
   833 ;; *************** function _data_down *****************
   834 ;; Defined at:
   835 ;;		line 80 in file "mainZS.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		None
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_num9
   859 ;;		_num1
   860 ;;		_end
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _data_down
   867  0685                     _data_down:	
   868  0685                     l754:	
   869                           ;incstack = 0
   870                           ; Regs used in _data_down: []
   871                           
   872  0685  0000               	nop	;# 
   873                           
   874                           ;mainZS.c: 82:     PORTBbits.RB2=1;
   875  0686  1283               	bcf	3,5	;RP0=0, select bank0
   876  0687  1303               	bcf	3,6	;RP1=0, select bank0
   877  0688  1506               	bsf	6,2	;volatile
   878  0689  0000               	nop	;# 
   879                           
   880                           ;mainZS.c: 84:     PORTBbits.RB2=0;
   881  068A  1283               	bcf	3,5	;RP0=0, select bank0
   882  068B  1303               	bcf	3,6	;RP1=0, select bank0
   883  068C  1106               	bcf	6,2	;volatile
   884  068D  0000               	nop	;# 
   885  068E                     l46:	
   886  068E  0008               	return
   887  068F                     __end_of_data_down:	
   888                           
   889                           	psect	text6
   890  06A9                     __ptext6:	
   891 ;; *************** function _btn_check *****************
   892 ;; Defined at:
   893 ;;		line 62 in file "mainZS.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;		None
   896 ;; Auto vars:     Size  Location     Type
   897 ;;		None
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, status,2, status,0
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   907 ;;      Params:         0       0       0       0       0
   908 ;;      Locals:         0       0       0       0       0
   909 ;;      Temps:          0       0       0       0       0
   910 ;;      Totals:         0       0       0       0       0
   911 ;;Total ram usage:        0 bytes
   912 ;; Hardware stack levels used:    1
   913 ;; This function calls:
   914 ;;		Nothing
   915 ;; This function is called by:
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           
   921                           ;psect for function _btn_check
   922  06A9                     _btn_check:	
   923  06A9                     l756:	
   924                           ;incstack = 0
   925                           ; Regs used in _btn_check: [wreg+status,2+status,0]
   926                           
   927                           
   928                           ;mainZS.c: 63:     if (!PORTBbits.RB4 && !flag){
   929  06A9  1283               	bcf	3,5	;RP0=0, select bank0
   930  06AA  1303               	bcf	3,6	;RP1=0, select bank0
   931  06AB  1A06               	btfsc	6,4	;volatile
   932  06AC  2EAE               	goto	u121
   933  06AD  2EAF               	goto	u120
   934  06AE                     u121:	
   935  06AE  2EBA               	goto	l37
   936  06AF                     u120:	
   937  06AF                     l758:	
   938  06AF  0824               	movf	_flag,w
   939  06B0  0425               	iorwf	_flag+1,w
   940  06B1  1D03               	btfss	3,2
   941  06B2  2EB4               	goto	u131
   942  06B3  2EB5               	goto	u130
   943  06B4                     u131:	
   944  06B4  2EBA               	goto	l37
   945  06B5                     u130:	
   946  06B5                     l760:	
   947                           
   948                           ;mainZS.c: 64:         flag=1;
   949  06B5  3001               	movlw	1
   950  06B6  00A4               	movwf	_flag
   951  06B7  3000               	movlw	0
   952  06B8  00A5               	movwf	_flag+1
   953                           
   954                           ;mainZS.c: 65:     }
   955  06B9  2ECB               	goto	l40
   956  06BA                     l37:	
   957                           ;mainZS.c: 66:     else if (PORTBbits.RB4 && flag){
   958                           
   959  06BA  1E06               	btfss	6,4	;volatile
   960  06BB  2EBD               	goto	u141
   961  06BC  2EBE               	goto	u140
   962  06BD                     u141:	
   963  06BD  2ECB               	goto	l40
   964  06BE                     u140:	
   965  06BE                     l762:	
   966  06BE  0824               	movf	_flag,w
   967  06BF  0425               	iorwf	_flag+1,w
   968  06C0  1903               	btfsc	3,2
   969  06C1  2EC3               	goto	u151
   970  06C2  2EC4               	goto	u150
   971  06C3                     u151:	
   972  06C3  2ECB               	goto	l40
   973  06C4                     u150:	
   974  06C4                     l764:	
   975                           
   976                           ;mainZS.c: 67:         flag =0;
   977  06C4  01A4               	clrf	_flag
   978  06C5  01A5               	clrf	_flag+1
   979  06C6                     l766:	
   980                           
   981                           ;mainZS.c: 68:         iter =iter*2;
   982  06C6  1003               	clrc
   983  06C7  0D20               	rlf	_iter,w
   984  06C8  00A0               	movwf	_iter
   985  06C9  0D21               	rlf	_iter+1,w
   986  06CA  00A1               	movwf	_iter+1
   987  06CB                     l40:	
   988  06CB  0008               	return
   989  06CC                     __end_of_btn_check:	
   990  007E                     btemp	set	126	;btemp
   991  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0     121
                                              0 COMMON    13    13      0
                          _btn_check
                          _data_down
                            _data_up
                                _end
                               _num1
                               _num9
 ---------------------------------------------------------------------------------
 (1) _num9                                                 0     0      0       0
                          _data_down
                            _data_up
 ---------------------------------------------------------------------------------
 (1) _num1                                                 0     0      0       0
                          _data_down
                            _data_up
 ---------------------------------------------------------------------------------
 (2) _data_up                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _end                                                  0     0      0       0
                          _data_down
 ---------------------------------------------------------------------------------
 (2) _data_down                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _btn_check                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _btn_check
   _data_down
   _data_up
   _end
     _data_down
   _num1
     _data_down
     _data_up
   _num9
     _data_down
     _data_up

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov  6 17:42:12 2019

                     l40 06CB                       l43 0698                       l52 06F4  
                     l37 06BA                       l46 068E                       l55 06A8  
                     l63 078E                       l64 0787                       l49 071D  
                     l66 07E4                       l68 07CE                       l69 07C7  
            __CFG_DEBUG$ 0001              __CFG_BOREN$ 0001                      l800 074E  
                    l810 0788                      l802 0754                      l820 07C8  
                    l812 079E                      l804 0761                      l822 07DE  
                    l814 07BC                      l806 077F                      l760 06B5  
                    l752 068F                      l816 07C1                      l808 0784  
                    l762 06BE                      l754 0685                      l770 06CC  
                    l818 07C4                      l764 06C4                      l756 06A9  
                    l772 0699                      l780 0738                      l766 06C6  
                    l758 06AF                      l790 0742                      l782 073E  
                    l774 071E                      l768 06F5                      l792 0747  
                    l784 0742                      l776 0728                      l786 0742  
                    l778 072C                      l788 0742                      l798 0749  
                    _RB4 0034                      u120 06AF                      u121 06AE  
                    u130 06B5                      u131 06B4                      u140 06BE  
                    u141 06BD                      u150 06C4                      u151 06C3  
                    u160 0761                      u161 0760                      u170 079E  
                    u171 079D                      u180 07DE                      u181 07DD  
                    u165 075D                      u190 07F4                      u191 07F3  
                    u175 079A                      u185 07DA                      u195 07F0  
                    _end 0699             __CFG_FOSC$HS 0000                     ?_end 0070  
           __CFG_WRT$OFF 0000                     _flag 0024                     _main 071E  
                   _num1 06CC                     _iter 0020                     _num9 06F5  
                   _time 0022                     btemp 007E                     start 0000  
                  ??_end 0070                    ?_main 0070                    ?_num1 0070  
                  ?_num9 0070            __CFG_WDTE$OFF 0000                    _T2CON 0012  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087          __end_of_data_up 0699                    main@i 0079  
                  main@j 0073                    status 0003                    wtemp0 007E  
        __initialization 07F8             __end_of_main 07F8             __end_of_num1 06F5  
           __end_of_num9 071E                   ??_main 0070                   ??_num1 0070  
                 ??_num9 0070           __CFG_PWRTE$OFF 0000                ??_data_up 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070       __size_of_data_down 000A  
     __size_of_btn_check 0023               __pbssBANK0 0024               __pmaintext 071E  
                _CCP2CON 001D        __end_of_data_down 068F        __end_of_btn_check 06CC  
                _data_up 068F                  __ptext1 06F5                  __ptext2 06CC  
                __ptext3 068F                  __ptext4 0699                  __ptext5 0685  
                __ptext6 06A9             __size_of_end 0010     end_of_initialization 07FC  
              _PORTBbits 0006                __CFG_CPD$ 0001                __CFG_LVP$ 0000  
    start_initialization 07F8              __end_of_end 06A9                ___latbits 0002  
              __pnvBANK0 0020                _data_down 0685                 ?_data_up 0070  
              _btn_check 06A9               ?_data_down 0070               ?_btn_check 0070  
               __CFG_CP$ 0001         __size_of_data_up 000A            __size_of_main 00DA  
          __size_of_num1 0029            __size_of_num9 0029              ??_data_down 0070  
               main@i_85 0077                 main@i_86 007B              ??_btn_check 0070  
             _OPTION_REG 0081  
